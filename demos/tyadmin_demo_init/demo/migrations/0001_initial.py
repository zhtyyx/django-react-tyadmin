# Generated by Django 3.1.3 on 2020-11-30 14:42

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import tyadmin_api_cli.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('gender', models.CharField(choices=[('male', '男'), ('female', '女')], default='female', max_length=6, verbose_name='性别')),
                ('image', models.ImageField(upload_to='', verbose_name='头像')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=10, verbose_name='分类code')),
                ('name', models.CharField(blank=True, max_length=10, verbose_name='分类名')),
            ],
            options={
                'verbose_name': '分类[被外键关联]',
                'verbose_name_plural': '分类[被外键关联]',
            },
        ),
        migrations.CreateModel(
            name='DemoDefaultModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_char_field', models.CharField(default='tyadmin', max_length=10, verbose_name='Char默认值')),
                ('default_number_field', models.IntegerField(default=2020, verbose_name='Integer默认值')),
                ('default_float_number_field', models.FloatField(default=0.1, verbose_name='Float默认值')),
                ('default_bool_field', models.BooleanField(default=True, verbose_name='Boolean默认值')),
                ('default_text_field', models.TextField(default='一大段文字', verbose_name='Text默认值')),
                ('date_field', models.DateField(default=datetime.date.today, verbose_name='Date默认值')),
                ('date_time_field', models.DateTimeField(default=datetime.datetime.now, verbose_name='DateTime默认值')),
            ],
            options={
                'verbose_name': '全部字段类型-提供默认值',
                'verbose_name_plural': '全部字段类型-提供默认值',
            },
        ),
        migrations.CreateModel(
            name='DemoForeignKey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=10, verbose_name='CharField列')),
                ('number', models.IntegerField(blank=True, verbose_name='IntegerField列')),
                ('float_number', models.FloatField(blank=True, verbose_name='FloatField列')),
                ('image', models.ImageField(blank=True, upload_to='', verbose_name='ImageField列')),
                ('file', models.FileField(blank=True, upload_to='', verbose_name='FileField列')),
                ('bool', models.BooleanField(blank=True, verbose_name='BooleanField列')),
                ('text', models.TextField(blank=True, verbose_name='TextField列')),
            ],
            options={
                'verbose_name': '全部字段非必填[被外键关联]',
                'verbose_name_plural': '全部字段非必填[被外键关联]',
            },
        ),
        migrations.CreateModel(
            name='DemoModelRequire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('mode1', '模式1'), ('mode2', '模式2')], max_length=10, verbose_name='CharField列')),
                ('number', models.IntegerField(choices=[(1, '男'), (2, '女'), (3, '保密')], verbose_name='IntegerField列')),
            ],
            options={
                'verbose_name': '下拉选择示例(choices)',
                'verbose_name_plural': '下拉选择示例(choices)',
            },
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=10, verbose_name='标签code')),
                ('name', models.CharField(blank=True, max_length=10, verbose_name='标签名')),
            ],
            options={
                'verbose_name': '标签[被多对多关联]',
                'verbose_name_plural': '标签[被多对多关联]',
            },
        ),
        migrations.CreateModel(
            name='RichTextDemo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, verbose_name='标题')),
                ('content', tyadmin_api_cli.fields.richTextField(verbose_name='内容')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='demo.category', verbose_name='分类')),
                ('tags', models.ManyToManyField(to='demo.Tags', verbose_name='标签')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='demo.userprofile', verbose_name='作者')),
            ],
            options={
                'verbose_name': '富文本示例[关联外键，多对多标签]',
                'verbose_name_plural': '富文本示例[关联外键，多对多标签]',
            },
        ),
        migrations.CreateModel(
            name='DemoModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('char_field', models.CharField(max_length=10, verbose_name='CharField列')),
                ('number_field', models.IntegerField(verbose_name='IntegerField列')),
                ('float_number_field', models.FloatField(verbose_name='FloatField列')),
                ('image_field', models.ImageField(upload_to='', verbose_name='ImageField列')),
                ('file_field', models.FileField(upload_to='', verbose_name='FileField列')),
                ('bool_field', models.BooleanField(verbose_name='BooleanField列')),
                ('text_field', models.TextField(verbose_name='TextField列')),
                ('date_field', models.DateField(verbose_name='DateField列')),
                ('date_time_field', models.DateTimeField(verbose_name='DateTimeField列')),
                ('foreign_key_field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='demo.demoforeignkey', verbose_name='关联外键')),
            ],
            options={
                'verbose_name': '全部字段类型-必填',
                'verbose_name_plural': '全部字段类型-必填',
            },
        ),
    ]
